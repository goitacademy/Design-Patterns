class InventoryService {
    private stock: Record<string, number> = {
        "product-42": 5,
        "product-99": 0,
    };

    reserveProduct(productId: string): boolean {
        if (this.stock[productId] > 0) {
            this.stock[productId]--;
            console.log(`‚úÖ –†–µ–∑–µ—Ä–≤–æ–≤–∞–Ω–æ ${productId}`);
            return true;
        }
        console.log(`‚ö†Ô∏è –ù–µ–º–∞—î –≤ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ: ${productId}`);
        return false;
    }

    releaseProduct(productId: string): void {
        this.stock[productId]++;
        console.log(`‚Ü©Ô∏è –†–µ–∑–µ—Ä–≤ —Å–∫–∞—Å–æ–≤–∞–Ω–æ –¥–ª—è ${productId}`);
    }

    checkAvailability(productId: string): boolean {
        return this.stock[productId] > 0;
    }
}

class PaymentService {
    process(account: string, amount: number): boolean {
        console.log(`üí∞ –û–ø–ª–∞—Ç–∞ ${amount} –∑ —Ä–∞—Ö—É–Ω–∫—É ${account}`);
        return true;
    }
}

class ShippingService {
    ship(productId: string): void {
        console.log(`üöö –í—ñ–¥–ø—Ä–∞–≤–∫–∞ —Ç–æ–≤–∞—Ä—É ${productId}`);
    }
}

class ExtendedShopFacade {
    private inventory = new InventoryService();
    private payment = new PaymentService();
    private shipping = new ShippingService();

    order(productId: string, account: string, amount: number): void {
        const reserved = this.inventory.reserveProduct(productId);
        if (!reserved) return;

        const paid = this.payment.process(account, amount);
        if (paid) {
            this.shipping.ship(productId);
        } else {
            this.inventory.releaseProduct(productId);
        }
    }

    getInventoryService(): InventoryService {
        return this.inventory;
    }
}

// –ö–ª—ñ—î–Ω—Ç—Å—å–∫–∏–π –∫–æ–¥
const shop = new ExtendedShopFacade();

// –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞ –æ–ø–µ—Ä–∞—Ü—ñ—è —á–µ—Ä–µ–∑ —Ñ–∞—Å–∞–¥
shop.order("product-42", "user-acc", 299);

// –î–æ—Å—Ç—É–ø –¥–æ –ø—ñ–¥—Å–∏—Å—Ç–µ–º–∏ –Ω–∞–ø—Ä—è–º—É
const inventory = shop.getInventoryService();
console.log("–î–æ—Å—Ç—É–ø–Ω—ñ—Å—Ç—å —Ç–æ–≤–∞—Ä—É:", inventory.checkAvailability("product-99"));
