// –ü—ñ–¥—Å–∏—Å—Ç–µ–º–∞ –∫–µ—Ä—É–≤–∞–Ω–Ω—è —Ç–æ–≤–∞—Ä–∞–º–∏
class InventoryService {
    reserveProduct(productId: string): void {
        console.log(`üîÑ –†–µ–∑–µ—Ä–≤—É–≤–∞–Ω–Ω—è —Ç–æ–≤–∞—Ä—É ${productId}`);
    }

    releaseProduct(productId: string): void {
        console.log(`‚ùå –°–∫–∞—Å—É–≤–∞–Ω–Ω—è —Ä–µ–∑–µ—Ä–≤—É —Ç–æ–≤–∞—Ä—É ${productId}`);
    }
}

// –ü—ñ–¥—Å–∏—Å—Ç–µ–º–∞ –æ–±—Ä–æ–±–∫–∏ –ø–ª–∞—Ç–µ–∂—ñ–≤
class PaymentService {
    processPayment(account: string, amount: number): boolean {
        console.log(`üí≥ –ü—Ä–æ–≤–µ–¥–µ–Ω–Ω—è –ø–ª–∞—Ç–µ–∂—É ${amount} –∑ —Ä–∞—Ö—É–Ω–∫—É ${account}`);
        return true;
    }
}

// –ü—ñ–¥—Å–∏—Å—Ç–µ–º–∞ –ª–æ–≥—ñ—Å—Ç–∏–∫–∏
class ShippingService {
    arrangeDelivery(productId: string): void {
        console.log(`üì¶ –û—Ä–≥–∞–Ω—ñ–∑–∞—Ü—ñ—è –¥–æ—Å—Ç–∞–≤–∫–∏ –¥–ª—è —Ç–æ–≤–∞—Ä—É ${productId}`);
    }
}

// –ü—ñ–¥—Ñ–∞—Å–∞–¥ –¥–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
class OrderProcessor {
    constructor(
        private inventory: InventoryService,
        private payment: PaymentService,
        private shipping: ShippingService
    ) { }

    processOrder(productId: string, account: string, amount: number): void {
        this.inventory.reserveProduct(productId);

        const success = this.payment.processPayment(account, amount);
        if (success) {
            this.shipping.arrangeDelivery(productId);
        } else {
            this.inventory.releaseProduct(productId);
        }
    }
}

// –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∏–π —Ñ–∞—Å–∞–¥
class ShopFacade {
    private inventory = new InventoryService();
    private payment = new PaymentService();
    private shipping = new ShippingService();
    private processor = new OrderProcessor(this.inventory, this.payment, this.shipping);

    order(productId: string, account: string, amount: number): void {
        this.processor.processOrder(productId, account, amount);
    }
}

// –ö–ª—ñ—î–Ω—Ç—Å—å–∫–∏–π –∫–æ–¥
const shop = new ShopFacade();
shop.order("product-42", "user-acc", 299);